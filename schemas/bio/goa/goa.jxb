<?xml version="1.0" encoding="UTF-8"?>
<jxb:bindings 
xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
xmlns:ci="http://jaxb.dev.java.net/plugin/code-injector"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:goa="http://www.ebi.ac.uk/GOA"
jxb:extensionBindingPrefixes="ci "
jxb:version="2.0"
>

<jxb:bindings schemaLocation="goa.xsd">
 <jxb:bindings node="/xs:schema">
    <jxb:schemaBindings>
      <jxb:package name="generated.ebi.ac.uk.goa"/>
    </jxb:schemaBindings>
  </jxb:bindings>


 <jxb:bindings node="/xs:schema/xs:complexType[@name='Association']">
  <ci:code>

 public static final String NS="http://www.ebi.ac.uk/GOA";
 
 </ci:code>
 </jxb:bindings>
 
<jxb:bindings node="/xs:schema/xs:complexType[@name='Associations']">
  <ci:code>
  
  public static final String NS=Association.NS;
  
  private static  void parse(java.io.BufferedReader in) throws
  		java.io.IOException,
  		javax.xml.bind.JAXBException,
  		javax.xml.stream.XMLStreamException
  	{
	  final String header="!gaf-version: 2.0";
	 javax.xml.bind.JAXBContext jaxbCtxt=javax.xml.bind.JAXBContext.newInstance(
			  	"generated.ebi.ac.uk.goa"
			  	);
	javax.xml.bind.Marshaller marshaller=jaxbCtxt.createMarshaller();
	marshaller.setProperty(javax.xml.bind.Marshaller.JAXB_FRAGMENT, Boolean.TRUE);
	marshaller.setProperty("jaxb.formatted.output",true);

	String line=in.readLine();
	if(line==null || !line.equals(header))
		{
		System.err.println("header is not "+header);
		System.exit(-1);
		}
	
	java.util.regex.Pattern tab=java.util.regex.Pattern.compile("[\t]");
	Associations associations=new Associations();
	while((line=in.readLine())!=null)
		{
		String tokens[]=tab.split(line);
		Association rec=new Association();
		rec.setDb(tokens[0]);
		rec.setObjectId(tokens[1]);
		rec.setObjectSymbol(tokens[2]);
		if(!tokens[3].isEmpty()) rec.setQualifier(tokens[3]);
		rec.setGoId(tokens[4]);
		rec.setDbRef(tokens[5]);
		rec.setEvidence(tokens[6]);
		for(String with: tokens[7].split("[|]"))
			{
			if(!with.isEmpty()) rec.getWith().add(with);
			}
		rec.setAspect(tokens[8]);
		rec.setDbObjectName(tokens[9]);
		for(String with: tokens[10].split("[|]"))
			{
			if(!with.isEmpty()) rec.getSynonym().add(with);
			}
		rec.setDbObjectType(tokens[11]);
		rec.setTaxonId(tokens[12]);
		rec.setDate(tokens[13]);
		rec.setAssignedBy(tokens[14]);
		if(tokens.length>15) rec.setAnnotation(tokens[15]);
		associations.getAssociation().add(rec);
		//marshaller.marshal(jxb, System.err);
		}
	javax.xml.bind.JAXBElement&lt;Associations&gt; jxb=new javax.xml.bind.JAXBElement&lt;Associations&gt;(
			new javax.xml.namespace.QName(NS,"associations"),
			Associations.class,
			associations
			);
	/*
	javax.xml.stream.XMLOutputFactory xmlfactory= javax.xml.stream.XMLOutputFactory.newInstance();
	xmlfactory.setProperty(javax.xml.stream.XMLOutputFactory.IS_REPAIRING_NAMESPACES, Boolean.TRUE);
	javax.xml.stream.XMLStreamWriter w= xmlfactory.createXMLStreamWriter(System.out,"UTF-8");
	w.setDefaultNamespace(NS);
	w.writeStartDocument("UTF-8","1.0");
	w.writeStartElement("goa","x",NS);
	w.writeAttribute("version",header);
	
	marshaller.marshal(jxb, w);
	w.writeEndElement();
	w.writeEndDocument();
	w.flush();
	w.close();*/
	
	marshaller.marshal(jxb,System.out);
  	}
    
 public static void main(String args[]) throws Exception
  {
  
  if(args.length==0)
	{
	parse(new java.io.BufferedReader(new java.io.InputStreamReader(System.in)));
	}
  else if(args.length==1)
  	{
	  parse(new java.io.BufferedReader(new java.io.FileReader(args[0]))); 
  	}
  else
  {
	  System.err.println("usage: (goa.fil|stdin)");
	  System.exit(-1);
  }
  }


</ci:code>
 </jxb:bindings>
</jxb:bindings>

</jxb:bindings>

<?xml version="1.0" encoding="UTF-8"?>
<jxb:bindings 
xmlns:xs="http://www.w3.org/2001/XMLSchema"
xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
xmlns:ci="http://jaxb.dev.java.net/plugin/code-injector"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:obo="http://purl.obolibrary.org/obo/"
xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
xmlns:doid="http://purl.obolibrary.org/obo/doid#"
xmlns:owl="http://www.w3.org/2002/07/owl#"
xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:oboInOwl="http://www.geneontology.org/formats/oboInOwl#"
jxb:extensionBindingPrefixes="ci "
jxb:version="2.0"
>


<jxb:bindings schemaLocation="oboInOwl.xsd">
 <jxb:bindings node="/xs:schema">
    <jxb:schemaBindings>
      <jxb:package name="generated.org.diseaseontology.oboInOwl"/>
    </jxb:schemaBindings>
  </jxb:bindings>
</jxb:bindings>


<jxb:bindings schemaLocation="owl.xsd">
 <jxb:bindings node="/xs:schema">
    <jxb:schemaBindings>
      <jxb:package name="generated.org.diseaseontology.owl"/>
    </jxb:schemaBindings>
  </jxb:bindings>
</jxb:bindings>

<jxb:bindings schemaLocation="rdfs.xsd">
 <jxb:bindings node="/xs:schema">
    <jxb:schemaBindings>
      <jxb:package name="generated.org.diseaseontology.rdfs"/>
    </jxb:schemaBindings>
  </jxb:bindings>
</jxb:bindings>

<jxb:bindings schemaLocation="doid.xsd">
 <jxb:bindings node="/xs:schema">
    <jxb:schemaBindings>
      <jxb:package name="generated.org.diseaseontology.doid"/>
    </jxb:schemaBindings>
  </jxb:bindings>
</jxb:bindings>


<jxb:bindings schemaLocation="rdf.xsd">

<jxb:bindings node="/xs:schema">
    <jxb:schemaBindings>
      <jxb:package name="generated.org.diseaseontology.rdf"/>
    </jxb:schemaBindings>
  </jxb:bindings>

 <!-- here we use an XPATH expression to tell xjc about which part
 of the XML schema we want to change -->
 <jxb:bindings node="/xs:schema/xs:complexType[@name='RDF']">
  <ci:code>

 public static final String NS="http://www.w3.org/1999/02/22-rdf-syntax-ns#";

 private static void recursive(
 	java.util.Map&lt;String,Term&gt; uri2term,
 	java.util.Set&lt;String&gt; uris,
 	String id
 	)
 	{
 	if(uris.contains(id)) return;
	Term t=uri2term.get(id);
 	if(t==null) return;
 	uris.add(id);
 	
 	//find parents
 	for(Term term:uri2term.values())
 		{
 		for(Term.SubClassOf sub:term.getSubClassOf())
 			{
 			if(sub.getResource().equals(id))
 				{
 				recursive(uri2term,uris,term.getAbout());
 				}
 			}
 		}
	}
 public static void main(String args[]) throws Exception
  {
  final String prefix="http://purl.obolibrary.org/obo/";
  if(args.length&lt;2)
  	{
  	System.err.println("usage: doid.owl doi1 doi2 doi3 ...");
  	return;
  	}
  javax.xml.bind.JAXBContext jaxbCtxt=javax.xml.bind.JAXBContext.newInstance(
  	"generated.org.diseaseontology.owl:generated.org.diseaseontology.rdf"
  	);
  javax.xml.bind.Unmarshaller unmarshaller=jaxbCtxt.createUnmarshaller();
  RDF rdf=(RDF)((javax.xml.bind.JAXBElement)unmarshaller.unmarshal(new java.io.File(args[0]))).getValue();
  java.util.Map&lt;String,Term&gt; uri2term=new java.util.HashMap&lt;String,Term&gt;(rdf.getTerms().size());
  java.util.Set&lt;String&gt; uris=new java.util.HashSet&lt;String&gt;();
  for(Term t:rdf.getTerms())
  	{
  	uri2term.put(t.getAbout(),t);
  	}
 for(int optind=1;optind &lt; args.length;++optind)
 	{
 	String id=args[optind];
 	if(id.startsWith("DOID:")) id="DOID_"+id.substring(5).trim();
 	if(!id.startsWith(prefix)) id=prefix+id;
 	
 	recursive(uri2term,uris,id);
 	}
  for(String uri:uris)
  	{
  	Term t=uri2term.get(uri);
  	System.out.println(uri+"\t"+t.getId()+"\t"+t.getLabel()+"\t");
	}
  }

</ci:code>
 </jxb:bindings>
</jxb:bindings>

</jxb:bindings>
